/**
 * fevvelasquez 2021, coding exercises about Java JDBC API basis.
 */
package me.fevvelasquez.jdbc.api.basis;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * Statement results generated by {@link SqlExecutor}.
 * 
 * @version 0.1.
 * @author fevvelasquez@gmail.com
 */
public class StatementResult {

	private final Statement statement;
	private final boolean isQuery;
	private final ResultSet resultset;
	private final int rowsAffected;

	/**
	 * Statement results generated by {@link SqlExecutor}.
	 * 
	 * @param statement    Statement executed.
	 * @param isQuery      Indicates if {@code statement} is a query.
	 * @param resultset    Set of query results.
	 * @param rowsAffected Count of affected rows.
	 */
	StatementResult(Statement statement, boolean isQuery, ResultSet resultset, int rowsAffected) {
		this.statement = statement;
		this.isQuery = isQuery;
		this.resultset = resultset;
		this.rowsAffected = rowsAffected;
	}

	/**
	 * Release Statement resources.
	 */
	public void close() {
		try {
			statement.close();
			System.out.println("Statement closed.");
		} catch (SQLException e) {
			System.out.println(e.getMessage());
		}
	}

	/**
	 * Indicates if the statement is a query.
	 * 
	 * @return {@code true} means a set of results is available through
	 *         {@link getResultset()}.
	 */
	public boolean isQuery() {
		return isQuery;
	}

	/**
	 * Use if statement is a query.
	 * 
	 * @return A set of query results.
	 */
	public ResultSet getResultset() {
		return resultset;
	}

	/**
	 * Use if statement is not a query.
	 * 
	 * @return A count of affected rows.
	 */
	public int getRowsAffected() {
		return rowsAffected;
	}

}
